git init
将当前所在目录变成git可管理目录仓库

git add <file>  "可一次添加多个文件"
将文件添加道git缓存仓库(未正式放入git仓库)

git commit
将缓存仓库的文件放入git仓库

git status
返回当前目录(仓库)文件的状态(是否修改等等)

git diff
放回当前目录(仓库)文件与git仓库文件的具体的不同点

git log --pretty=oneline  "提交命令"
显示提交到git仓库的日志,后面参数可以让日志以一行输出

git reset --hard HEAD^ "^表示上个版本,^^表示上上个版本,可用~(数字)来简写,如~10"
将目录仓库中的文件回退到git仓库中文件的某个版本(回到过去)

git reset --hard id "id是git log命令下commit后的版本号,可只写几位让git自动查找"
目录仓库文件回退至过去版本时此命令恢复到现在(指定id的)版本(回到未来)

HEAD
一个指向版本的指针

git reflog               "历史命令"
记录你的每一次命令,可在此处看到文件的id,方便误操作时找回文件

git原理:
	.git隐藏文件是git创建的版本库
	工作区:可见的目录
	暂存区(stage):add命令添加的文件都是放在暂存区
	控制区(master):最终文件的存放处,还有唯一的分支master和它的指针HEAD

git checkout -- file   "--很重要,没有就变成另外一个命令"
撤销工作区文件的修改(git仓库文件替换git目录下文件)

git reset HEAD file
撤销暂存区文件的修改. (再次撤销工作区文件修改可以应对文件乱改的情况)

git rm  "rm file --> git status --> git rm --> git commit"
删除git仓库中的文件,然后需要git commit应用到仓库,若恢复会丢失最近一次提交的修改















